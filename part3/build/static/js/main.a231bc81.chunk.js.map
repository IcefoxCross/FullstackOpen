{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","value","onChange","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a231bc81.chunk.js","sourcesContent":["/* jshint esversion: 9 */\r\nimport React from 'react';\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important';\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","/* jshint esversion: 9 */\r\nimport axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default {getAll,create,update}","/* jshint esversion: 9 */\r\nimport React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","/* jshint esversion: 9 */\r\nimport React from 'react';\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","/* jshint esversion: 9 */\r\nimport React, {useState,useEffect} from 'react';\r\nimport Note from './components/Note';\r\nimport noteService from './services/notes';\r\nimport Notification from './components/Notification';\r\nimport Footer from './components/Footer';\r\n\r\nconst App = () => {\r\n\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState('a new note...');\r\n    const [showAll, setShowAll] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => {\r\n                setNotes(initialNotes);\r\n            });\r\n    }, []);\r\n\r\n    const notesToShow = showAll\r\n        ? notes\r\n        : notes.filter(note => note.important);\r\n    \r\n    const toggleImportanceOf = id => {\r\n        const url = `https://limitless-garden-82080.herokuapp.com/notes/${id}`\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = {...note, important: !note.important}\r\n\r\n        noteService\r\n            .update(id, changedNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote));\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(`Note '${note.content}' was already deleted from server`);\r\n                setTimeout(() => {\r\n                    setErrorMessage(null);\r\n                }, 5000);\r\n                setNotes(notes.filter(n => n.id !== id));\r\n            })\r\n    }\r\n\r\n    const rows = () => notesToShow.map(note => \r\n        <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>)\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault();\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5,\r\n            id: notes.length + 1\r\n        }\r\n\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote));\r\n                setNewNote('');\r\n            });\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n        setNewNote(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n\r\n            <Notification message={errorMessage} />\r\n\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? 'important' : 'all'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {rows()}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input value={newNote} onChange={handleNoteChange} />\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","/* jshint esversion: 9 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}